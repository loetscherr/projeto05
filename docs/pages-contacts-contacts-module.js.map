{"version":3,"sources":["./src/app/pages/contacts/contacts.module.ts","./src/app/pages/contacts/contacts.page.scss","./src/app/pages/contacts/contacts.page.ts","./src/app/pages/contacts/contacts-routing.module.ts","./src/app/pages/contacts/contacts.page.html"],"names":[],"mappings":"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","file":"pages-contacts-contacts-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { ContactsPageRoutingModule } from './contacts-routing.module';\r\n\r\nimport { ContactsPage } from './contacts.page';\r\n\r\n// iMPORTA FORMULÁRIOS DO ANGULAR\r\nimport {ReactiveFormsModule} from '@angular/forms';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    ContactsPageRoutingModule,\r\n\r\n    // Importar o executive \r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: [ContactsPage]\r\n})\r\nexport class ContactsPageModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjb250YWN0cy5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { from } from 'rxjs';\r\n\r\n// 1. Importa dependências\r\nimport { FormBuilder, FormGroup, Validators, AbstractControl } from '@angular/forms';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\nimport { DatePipe } from '@angular/common';\r\nimport { AppService } from '../../services/app.service';\r\n\r\n// 6. Não permite somente espaços nos campos\r\nexport function removeSpaces(control: AbstractControl) {\r\n  if (control && control.value && !control.value.replace(/\\s/g, '').length) {\r\n    control.setValue('');\r\n  }\r\n  return null;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-contacts',\r\n  templateUrl: './contacts.page.html',\r\n  styleUrls: ['./contacts.page.scss'],\r\n})\r\nexport class ContactsPage implements OnInit {\r\n\r\n  // 3. Atributos\r\n  public contactForm: FormGroup; // Cria formulário\r\n  pipe = new DatePipe('en_US'); // Formatador de datas\r\n\r\n  constructor(\r\n\r\n    // 2. Injeta dependências\r\n    public form: FormBuilder,\r\n    public afs: AngularFirestore,\r\n    public auth: AngularFireAuth,\r\n    public app: AppService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n    // 4. Cria o formulário de contatos\r\n    this.contactFormCreate();\r\n\r\n    // 8.  Preenche os campos se usuário está logado\r\n    if (this.contactForm) {\r\n      this.auth.onAuthStateChanged(\r\n        (userData) => {\r\n          if(userData) {\r\n            this.contactForm.controls.name.setValue(userData.displayName.trim());\r\n            this.contactForm.controls.email.setValue(userData.email.trim());\r\n          }\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  // 5. Cria o formulário de contatos\r\n  contactFormCreate() {\r\n\r\n    this.contactForm = this.form.group({\r\n      date: [''],\r\n      name: [\r\n        '',\r\n        Validators.compose([\r\n          Validators.required, // Obrigatório\r\n          Validators.minLength(3), // Pelo menos 3 caracteres\r\n          removeSpaces\r\n        ])\r\n      ],\r\n      email: [\r\n        '',\r\n        Validators.compose([\r\n          Validators.required,\r\n          Validators.email,\r\n          removeSpaces\r\n        ])\r\n      ],\r\n      subject: [\r\n        '',\r\n        Validators.compose([\r\n          Validators.required,\r\n          Validators.minLength(5),\r\n          removeSpaces\r\n        ])\r\n      ],\r\n      message: [\r\n        '',\r\n        Validators.compose([\r\n          Validators.required,\r\n          Validators.minLength(5),\r\n          removeSpaces\r\n        ])\r\n      ]\r\n    });\r\n  }\r\n\r\n  // 7. Envia o formulário\r\n  contactSend() {\r\n\r\n    // Formata data\r\n    this.contactForm.controls.date.setValue(\r\n      this.pipe.transform(Date.now(), 'yyyy-MM-dd HH:mm:ss').trim()\r\n    );\r\n\r\n    // Salva documento no Firestore\r\n    this.afs.collection('contacts').add(this.contactForm.value)\r\n      .then(\r\n        () => {\r\n\r\n          // Exibe o feedback\r\n          this.app.myAlert(\r\n            'Contato Enviado',\r\n            'Seu contato foi enviado com sucesso!<br><br>Obrigado...',\r\n            () => {\r\n\r\n              // Reiniciar o formulário\r\n              this.contactForm.reset({\r\n                date: '',\r\n                name: this.contactForm.value.name.trim(),\r\n                email: this.contactForm.value.email.trim(),\r\n                subject: '',\r\n                message: ''\r\n              });\r\n            }\r\n          );\r\n        }\r\n      )\r\n      .catch(\r\n        (error) => { console.error(error); }\r\n      );\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ContactsPage } from './contacts.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ContactsPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ContactsPageRoutingModule {}\r\n","export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>Faça Contato</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content class=\\\"ion-padding\\\">\\r\\n\\r\\n  <p class=\\\"ion-no-margin\\\">Preencha o formulário abaixo para entrar em contato com a equipe do\\r\\n    <strong>Marfagafos</strong>.\\r\\n  </p>\\r\\n  <p class=\\\"ion-text-center\\\"><small>\\r\\n      <ion-text color=\\\"danger\\\">Preencha todos os campos.</ion-text>\\r\\n    </small></p>\\r\\n\\r\\n  <form [formGroup]=\\\"contactForm\\\" (ngSubmit)=\\\"contactSend()\\\">\\r\\n\\r\\n    <ion-list lines=\\\"full\\\" class=\\\"ion-no-padding\\\">\\r\\n\\r\\n      <ion-item>\\r\\n        <ion-label for=\\\"name\\\" position=\\\"floating\\\" color=\\\"primary\\\">\\r\\n          Nome:\\r\\n          <ion-text color=\\\"danger\\\" *ngIf=\\\"contactForm.controls.name.errors\\\">\\r\\n\\r\\n            <small *ngIf=\\\"contactForm.controls.name.errors.required\\\">\\r\\n              * Obrigatório\\r\\n            </small>\\r\\n\\r\\n            <small *ngIf=\\\"contactForm.controls.name.errors.minlength\\\">\\r\\n              * Inválido\\r\\n            </small>\\r\\n\\r\\n          </ion-text>\\r\\n        </ion-label>\\r\\n        <ion-input type=\\\"text\\\" id=\\\"name\\\" name=\\\"name\\\" formControlName=\\\"name\\\"></ion-input>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item>\\r\\n        <ion-label for=\\\"email\\\" position=\\\"floating\\\" color=\\\"primary\\\">\\r\\n          E-mail:\\r\\n          <ion-text color=\\\"danger\\\" *ngIf=\\\"contactForm.controls.email.errors\\\">\\r\\n\\r\\n            <small *ngIf=\\\"contactForm.controls.email.errors.required\\\">\\r\\n              * Obrigatório\\r\\n            </small>\\r\\n\\r\\n            <small *ngIf=\\\"contactForm.controls.email.errors.email\\\">\\r\\n              * Inválido\\r\\n            </small>\\r\\n\\r\\n          </ion-text>\\r\\n        </ion-label>\\r\\n        <ion-input type=\\\"text\\\" id=\\\"email\\\" name=\\\"email\\\" formControlName=\\\"email\\\"></ion-input>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item>\\r\\n        <ion-label for=\\\"subject\\\" position=\\\"floating\\\" color=\\\"primary\\\">\\r\\n          Assunto:\\r\\n          <ion-text color=\\\"danger\\\" *ngIf=\\\"contactForm.controls.subject.errors\\\">\\r\\n\\r\\n            <small *ngIf=\\\"contactForm.controls.subject.errors.required\\\">\\r\\n              * Obrigatório\\r\\n            </small>\\r\\n\\r\\n            <small *ngIf=\\\"contactForm.controls.subject.errors.minlength\\\">\\r\\n              * Inválido\\r\\n            </small>\\r\\n\\r\\n          </ion-text>\\r\\n        </ion-label>\\r\\n        <ion-input type=\\\"text\\\" id=\\\"subject\\\" name=\\\"subject\\\" formControlName=\\\"subject\\\"></ion-input>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item>\\r\\n        <ion-label for=\\\"message\\\" position=\\\"floating\\\" color=\\\"primary\\\">\\r\\n          Mensagem:\\r\\n          <ion-text color=\\\"danger\\\" *ngIf=\\\"contactForm.controls.message.errors\\\">\\r\\n\\r\\n            <small *ngIf=\\\"contactForm.controls.message.errors.required\\\">\\r\\n              * Obrigatório\\r\\n            </small>\\r\\n\\r\\n            <small *ngIf=\\\"contactForm.controls.message.errors.minlength\\\">\\r\\n              * Inválido\\r\\n            </small>\\r\\n\\r\\n          </ion-text>\\r\\n        </ion-label>\\r\\n        <ion-textarea type=\\\"text\\\" id=\\\"message\\\" name=\\\"message\\\" formControlName=\\\"message\\\" autoGrow=\\\"true\\\"></ion-textarea>\\r\\n      </ion-item>\\r\\n\\r\\n    </ion-list>\\r\\n\\r\\n    <ion-button type=\\\"submit\\\" expand=\\\"block\\\" class=\\\"ion-margin-vertical\\\" [disabled]=\\\"contactForm.invalid\\\">Enviar\\r\\n    </ion-button>\\r\\n\\r\\n  </form>\\r\\n\\r\\n</ion-content>\";"],"sourceRoot":"webpack:///"}